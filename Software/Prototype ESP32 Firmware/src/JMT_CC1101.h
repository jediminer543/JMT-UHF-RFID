#ifndef _H_JMTCC1101
#define _H_JMTCC1101

#include <Arduino.h>
#include <SPI.h>

//Access modes
//////////////
#define CC1101_MODE_WRITE 0x00
#define CC1101_MODE_READ 0x80
#define CC1101_MODE_BURST 0x40

// Registers
///////////
#define CC1101_REG_IOCFG2 0x00
#define CC1101_REG_IOCFG1 0x01
#define CC1101_REG_IOCFG0 0x02

#define CC1101_REG_FIFOTHR 0x03

#define CC1101_REG_SYNC1 0x04
#define CC1101_REG_SYNC0 0x05

#define CC1101_REG_PKTLEN 0x6

#define CC1101_REG_PKTCTRL1 0x07
#define CC1101_REG_PKTCTRL0 0x08

#define CC1101_REG_ADDR 0x09
#define CC1101_REG_CHANNR 0x0A

#define CC1101_REG_FSCTRL1 0x0B
#define CC1101_REG_FSCTRL0 0x0C

#define CC1101_REG_FREQ2 0x0D
#define CC1101_REG_FREQ1 0x0E
#define CC1101_REG_FREQ0 0x0F

#define CC1101_REG_MDMCFG4 0x10
#define CC1101_REG_MDMCFG3 0x11
#define CC1101_REG_MDMCFG2 0x12
#define CC1101_REG_MDMCFG1 0x13
#define CC1101_REG_MDMCFG0 0x14

#define CC1101_REG_DEVIATN 0x15

#define CC1101_REG_MCSM2 0x16
#define CC1101_REG_MCSM1 0x17
#define CC1101_REG_MCSM0 0x18

#define CC1101_REG_FOCCFG 0x19

#define CC1101_REG_BSCFG 0x1A

#define CC1101_REG_AGCCTRL2 0x1B
#define CC1101_REG_AGCCTRL1 0x1C
#define CC1101_REG_AGCCTRL0 0x1D

#define CC1101_REG_WORENV1 0x1E
#define CC1101_REG_WORENV0 0x1F

#define CC1101_REG_WORCTRL 0x20

#define CC1101_REG_FREND1 0x21
#define CC1101_REG_FREND0 0x22

#define CC1101_REG_FSCAL3 0x23
#define CC1101_REG_FSCAL2 0x24
#define CC1101_REG_FSCAL1 0x25
#define CC1101_REG_FSCAL0 0x26

#define CC1101_REG_RCCTRL1 0x27
#define CC1101_REG_RCCTRL0 0x28

#define CC1101_REG_FSTEST 0x29
#define CC1101_REG_PTEST 0x2A
#define CC1101_REG_AGCTEST 0x2B
#define CC1101_REG_TEST2 0x2C
#define CC1101_REG_TEST1 0x2D
#define CC1101_REG_TEST0 0x2E

// Command Strobes
//////////////////
#define CC1101_CMD_SRES     0x30
#define CC1101_CMD_SFSTXON  0x31
#define CC1101_CMD_SXOFF    0x32
#define CC1101_CMD_SCAL     0x33
#define CC1101_CMD_SRX      0x34
#define CC1101_CMD_STX      0x35
#define CC1101_CMD_SIDLE    0x36
#define CC1101_CMD_MISSING  0x37
#define CC1101_CMD_SWOR     0x38
#define CC1101_CMD_SPWD     0x39
#define CC1101_CMD_SFRX     0x3A
#define CC1101_CMD_SFTX     0x3B
#define CC1101_CMD_SWORRST  0x3C
#define CC1101_CMD_SNOP     0x3D

//Special Reg
/////////////
#define CC1101_SREG_PATABLE 0x3E
#define CC1101_SREG_FIFO 0x3F

#define CC1101_SREG_PARTNUM         (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_SRES)
#define CC1101_SREG_VERSION         (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_SFSTXON)
#define CC1101_SREG_FREQEST         (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_SXOFF)
#define CC1101_SREG_LQI             (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_SCAL)
#define CC1101_SREG_RSSI            (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_SRX)
#define CC1101_SREG_MARCSTATE       (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_STX)
#define CC1101_SREG_WORTIME1        (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_SIDLE)
#define CC1101_SREG_WORTIME0        (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_MISSING)
#define CC1101_SREG_PKTSTATUS       (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_SWOR)
#define CC1101_SREG_VCO_VC_DAC      (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_SPWD)
#define CC1101_SREG_TXBYTES         (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_SFRX)
#define CC1101_SREG_RXBYTES         (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_SFTX)
#define CC1101_SREG_RCCTRL1_STATUS  (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_SWORRST)
#define CC1101_SREG_RCCTRL0_STATUS  (CC1101_MODE_READ+CC1101_MODE_BURST+CC1101_CMD_SNOP)

//Functional
////////////
#define CC1101_GETDR(cmd) ((cmd & CC1101_MODE_BURST) ? 650000 : 900000)/2

class JCC1101 {
  SPIClass* spi;
  uint8_t CSn;
  public:
    JCC1101(SPIClass* spi, uint8_t CSn);
    uint8_t command(uint8_t cmd);
    void command(int len, uint8_t* dat);
    void commandRev(int len, uint8_t* dat);
};

uint8_t CC1101_COMMAND(SPIClass* spi, int CSn, uint8_t cmd);

void CC1101_COMMAND(SPIClass* spi, int CSn, int len, uint8_t* dat);

void CC1101_COMMAND_REV(SPIClass* spi, int CSn, int len, uint8_t* dat);

#endif
